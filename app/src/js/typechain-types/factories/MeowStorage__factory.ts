/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MeowStorage, MeowStorageInterface } from "../MeowStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "recipient",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "meowId",
        type: "uint256",
      },
    ],
    name: "MeowPublished",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getMeowById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "hashtags",
            type: "string[]",
          },
          {
            internalType: "uint128",
            name: "epoch",
            type: "uint128",
          },
        ],
        internalType: "struct MeowStorage.Meow",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hashtag",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "getMeowsByHashtag",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "hashtags",
            type: "string[]",
          },
          {
            internalType: "uint128",
            name: "epoch",
            type: "uint128",
          },
        ],
        internalType: "struct MeowStorage.Meow[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "getMeowsForProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "hashtags",
            type: "string[]",
          },
          {
            internalType: "uint128",
            name: "epoch",
            type: "uint128",
          },
        ],
        internalType: "struct MeowStorage.Meow[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_hashtags",
        type: "string[]",
      },
      {
        internalType: "uint128",
        name: "_epoch",
        type: "uint128",
      },
    ],
    name: "publish",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_managerAddr",
        type: "address",
      },
    ],
    name: "setManagerAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e24806100606000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637978b2311161005b5780637978b231146100fe5780639c675eaa1461011a578063ca3ec3e814610138578063f2fde38b146101685761007d565b806358d335b3146100825780636e594bf1146100b257806374ea1fc4146100ce575b600080fd5b61009c60048036038101906100979190611069565b610184565b6040516100a99190611374565b60405180910390f35b6100cc60048036038101906100c791906115dd565b61044b565b005b6100e860048036038101906100e39190611668565b610743565b6040516100f59190611374565b60405180910390f35b61011860048036038101906101139190611735565b610ae4565b005b610122610b80565b60405161012f9190611771565b60405180910390f35b610152600480360381019061014d919061178c565b610ba4565b60405161015f9190611823565b60405180910390f35b610182600480360381019061017d9190611735565b610d90565b005b60606000808367ffffffffffffffff8111156101a3576101a26113a0565b5b6040519080825280602002602001820160405280156101dc57816020015b6101c9610f0b565b8152602001906001900390816101c15790505b50905060006001866101ee9190611874565b90505b600254811115801561020257508483105b1561043e578660046000838152602001908152602001600020540361042b576003600082815260200190815260200160002060405180608001604052908160008201548152602001600182018054610259906118d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610285906118d7565b80156102d25780601f106102a7576101008083540402835291602001916102d2565b820191906000526020600020905b8154815290600101906020018083116102b557829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156103ac57838290600052602060002001805461031f906118d7565b80601f016020809104026020016040519081016040528092919081815260200182805461034b906118d7565b80156103985780601f1061036d57610100808354040283529160200191610398565b820191906000526020600020905b81548152906001019060200180831161037b57829003601f168201915b505050505081526020019060010190610300565b5050505081526020016003820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152505082848151811061041157610410611908565b5b6020026020010181905250828061042790611937565b9350505b808061043690611937565b9150506101f1565b5080925050509392505050565b6101008351111561045b57600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663bf40fac16040518163ffffffff1660e01b81526004016104bb906119dc565b602060405180830381865afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc9190611a11565b905060008190508073ffffffffffffffffffffffffffffffffffffffff166305cfa06f326040518263ffffffff1660e01b815260040161053c9190611771565b602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d9190611a76565b61058657600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663cb0e0d7d326040518263ffffffff1660e01b81526004016105c19190611771565b602060405180830381865afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106029190611ab8565b90506002600081548092919061061790611937565b919050555060405180608001604052806002548152602001888152602001878152602001866fffffffffffffffffffffffffffffffff168152506003600060025481526020019081526020016000206000820151816000015560208201518160010190816106859190611c91565b5060408201518160020190805190602001906106a2929190610f45565b5060608201518160030160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555090505080600460006002548152602001908152602001600020819055507f3a321f8f22690cb16f9b5d7df2de007878fe65f1efa5bc0181a6475bd4e63ad181600254604051610732929190611d72565b60405180910390a150505050505050565b60606000808367ffffffffffffffff811115610762576107616113a0565b5b60405190808252806020026020018201604052801561079b57816020015b610788610f0b565b8152602001906001900390816107805790505b50905060006001866107ad9190611874565b90505b60025481111580156107c157508483105b15610ad7576108b560036000838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b828210156108ab57838290600052602060002001805461081e906118d7565b80601f016020809104026020016040519081016040528092919081815260200182805461084a906118d7565b80156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050815260200190600101906107ff565b5050505088610e64565b15610ac45760036000828152602001908152602001600020604051806080016040529081600082015481526020016001820180546108f2906118d7565b80601f016020809104026020016040519081016040528092919081815260200182805461091e906118d7565b801561096b5780601f106109405761010080835404028352916020019161096b565b820191906000526020600020905b81548152906001019060200180831161094e57829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610a455783829060005260206000200180546109b8906118d7565b80601f01602080910402602001604051908101604052809291908181526020018280546109e4906118d7565b8015610a315780601f10610a0657610100808354040283529160200191610a31565b820191906000526020600020905b815481529060010190602001808311610a1457829003601f168201915b505050505081526020019060010190610999565b5050505081526020016003820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681525050828481518110610aaa57610aa9611908565b5b60200260200101819052508280610ac090611937565b9350505b8080610acf90611937565b9150506107b0565b5080925050509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b3c57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bac610f0b565b6003600083815260200190815260200160002060405180608001604052908160008201548152602001600182018054610be4906118d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c10906118d7565b8015610c5d5780601f10610c3257610100808354040283529160200191610c5d565b820191906000526020600020905b815481529060010190602001808311610c4057829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610d37578382906000526020600020018054610caa906118d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd6906118d7565b8015610d235780601f10610cf857610100808354040283529160200191610d23565b820191906000526020600020905b815481529060010190602001808311610d0657829003601f168201915b505050505081526020019060010190610c8b565b5050505081526020016003820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815250509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610de857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e2157600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600090505b8351811015610eff5782604051602001610e869190611dd7565b60405160208183030381529060405280519060200120848281518110610eaf57610eae611908565b5b6020026020010151604051602001610ec79190611dd7565b6040516020818303038152906040528051906020012003610eec576001915050610f05565b8080610ef790611937565b915050610e6c565b50600090505b92915050565b604051806080016040528060008152602001606081526020016060815260200160006fffffffffffffffffffffffffffffffff1681525090565b828054828255906000526020600020908101928215610f8d579160200282015b82811115610f8c578251829081610f7c9190611c91565b5091602001919060010190610f65565b5b509050610f9a9190610f9e565b5090565b5b80821115610fbe5760008181610fb59190610fc2565b50600101610f9f565b5090565b508054610fce906118d7565b6000825580601f10610fe05750610fff565b601f016020900490600052602060002090810190610ffe9190611002565b5b50565b5b8082111561101b576000816000905550600101611003565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61104681611033565b811461105157600080fd5b50565b6000813590506110638161103d565b92915050565b60008060006060848603121561108257611081611029565b5b600061109086828701611054565b93505060206110a186828701611054565b92505060406110b286828701611054565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110f181611033565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611131578082015181840152602081019050611116565b60008484015250505050565b6000601f19601f8301169050919050565b6000611159826110f7565b6111638185611102565b9350611173818560208601611113565b61117c8161113d565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006111bf838361114e565b905092915050565b6000602082019050919050565b60006111df82611187565b6111e98185611192565b9350836020820285016111fb856111a3565b8060005b85811015611237578484038952815161121885826111b3565b9450611223836111c7565b925060208a019950506001810190506111ff565b50829750879550505050505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61126e81611249565b82525050565b600060808301600083015161128c60008601826110e8565b50602083015184820360208601526112a4828261114e565b915050604083015184820360408601526112be82826111d4565b91505060608301516112d36060860182611265565b508091505092915050565b60006112ea8383611274565b905092915050565b6000602082019050919050565b600061130a826110bc565b61131481856110c7565b935083602082028501611326856110d8565b8060005b85811015611362578484038952815161134385826112de565b945061134e836112f2565b925060208a0199505060018101905061132a565b50829750879550505050505092915050565b6000602082019050818103600083015261138e81846112ff565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113d88261113d565b810181811067ffffffffffffffff821117156113f7576113f66113a0565b5b80604052505050565b600061140a61101f565b905061141682826113cf565b919050565b600067ffffffffffffffff821115611436576114356113a0565b5b61143f8261113d565b9050602081019050919050565b82818337600083830152505050565b600061146e6114698461141b565b611400565b90508281526020810184848401111561148a5761148961139b565b5b61149584828561144c565b509392505050565b600082601f8301126114b2576114b1611396565b5b81356114c284826020860161145b565b91505092915050565b600067ffffffffffffffff8211156114e6576114e56113a0565b5b602082029050602081019050919050565b600080fd5b600061150f61150a846114cb565b611400565b90508083825260208201905060208402830185811115611532576115316114f7565b5b835b8181101561157957803567ffffffffffffffff81111561155757611556611396565b5b808601611564898261149d565b85526020850194505050602081019050611534565b5050509392505050565b600082601f83011261159857611597611396565b5b81356115a88482602086016114fc565b91505092915050565b6115ba81611249565b81146115c557600080fd5b50565b6000813590506115d7816115b1565b92915050565b6000806000606084860312156115f6576115f5611029565b5b600084013567ffffffffffffffff8111156116145761161361102e565b5b6116208682870161149d565b935050602084013567ffffffffffffffff8111156116415761164061102e565b5b61164d86828701611583565b925050604061165e868287016115c8565b9150509250925092565b60008060006060848603121561168157611680611029565b5b600084013567ffffffffffffffff81111561169f5761169e61102e565b5b6116ab8682870161149d565b93505060206116bc86828701611054565b92505060406116cd86828701611054565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611702826116d7565b9050919050565b611712816116f7565b811461171d57600080fd5b50565b60008135905061172f81611709565b92915050565b60006020828403121561174b5761174a611029565b5b600061175984828501611720565b91505092915050565b61176b816116f7565b82525050565b60006020820190506117866000830184611762565b92915050565b6000602082840312156117a2576117a1611029565b5b60006117b084828501611054565b91505092915050565b60006080830160008301516117d160008601826110e8565b50602083015184820360208601526117e9828261114e565b9150506040830151848203604086015261180382826111d4565b91505060608301516118186060860182611265565b508091505092915050565b6000602082019050818103600083015261183d81846117b9565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061187f82611033565b915061188a83611033565b92508282019050808211156118a2576118a1611845565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118ef57607f821691505b602082108103611902576119016118a8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061194282611033565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361197457611973611845565b5b600182019050919050565b600082825260208201905092915050565b7f5573657253746f72616765000000000000000000000000000000000000000000600082015250565b60006119c6600b8361197f565b91506119d182611990565b602082019050919050565b600060208201905081810360008301526119f5816119b9565b9050919050565b600081519050611a0b81611709565b92915050565b600060208284031215611a2757611a26611029565b5b6000611a35848285016119fc565b91505092915050565b60008115159050919050565b611a5381611a3e565b8114611a5e57600080fd5b50565b600081519050611a7081611a4a565b92915050565b600060208284031215611a8c57611a8b611029565b5b6000611a9a84828501611a61565b91505092915050565b600081519050611ab28161103d565b92915050565b600060208284031215611ace57611acd611029565b5b6000611adc84828501611aa3565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611b477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b0a565b611b518683611b0a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611b8e611b89611b8484611033565b611b69565b611033565b9050919050565b6000819050919050565b611ba883611b73565b611bbc611bb482611b95565b848454611b17565b825550505050565b600090565b611bd1611bc4565b611bdc818484611b9f565b505050565b5b81811015611c0057611bf5600082611bc9565b600181019050611be2565b5050565b601f821115611c4557611c1681611ae5565b611c1f84611afa565b81016020851015611c2e578190505b611c42611c3a85611afa565b830182611be1565b50505b505050565b600082821c905092915050565b6000611c6860001984600802611c4a565b1980831691505092915050565b6000611c818383611c57565b9150826002028217905092915050565b611c9a826110f7565b67ffffffffffffffff811115611cb357611cb26113a0565b5b611cbd82546118d7565b611cc8828285611c04565b600060209050601f831160018114611cfb5760008415611ce9578287015190505b611cf38582611c75565b865550611d5b565b601f198416611d0986611ae5565b60005b82811015611d3157848901518255600182019150602085019450602081019050611d0c565b86831015611d4e5784890151611d4a601f891682611c57565b8355505b6001600288020188555050505b505050505050565b611d6c81611033565b82525050565b6000604082019050611d876000830185611d63565b611d946020830184611d63565b9392505050565b600081905092915050565b6000611db1826110f7565b611dbb8185611d9b565b9350611dcb818560208601611113565b80840191505092915050565b6000611de38284611da6565b91508190509291505056fea26469706673582212200994b945c1d61e590214b95cfd348768fc8f69a4824d3471fb730189484d253664736f6c63430008110033";

type MeowStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MeowStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MeowStorage__factory extends ContractFactory {
  constructor(...args: MeowStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MeowStorage> {
    return super.deploy(overrides || {}) as Promise<MeowStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MeowStorage {
    return super.attach(address) as MeowStorage;
  }
  override connect(signer: Signer): MeowStorage__factory {
    return super.connect(signer) as MeowStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MeowStorageInterface {
    return new utils.Interface(_abi) as MeowStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MeowStorage {
    return new Contract(address, _abi, signerOrProvider) as MeowStorage;
  }
}
