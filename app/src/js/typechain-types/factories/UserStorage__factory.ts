/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UserStorage, UserStorageInterface } from "../UserStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addressToId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_username",
        type: "string",
      },
    ],
    name: "createProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_profileId",
        type: "uint256",
      },
    ],
    name: "follow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_profileId",
        type: "uint256",
      },
    ],
    name: "getAvatar",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_profileId",
        type: "uint256",
      },
    ],
    name: "getFollowers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_profileId",
        type: "uint256",
      },
    ],
    name: "getFollowing",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_profileId",
        type: "uint256",
      },
    ],
    name: "getProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "username",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "avatarURI",
            type: "string",
          },
        ],
        internalType: "struct UserStorage.Profile",
        name: "profile",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "username",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "avatarURI",
            type: "string",
          },
        ],
        internalType: "struct UserStorage.Profile",
        name: "profile",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_profileOwner",
        type: "address",
      },
    ],
    name: "profileExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_avatarURI",
        type: "string",
      },
    ],
    name: "setAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_managerAddr",
        type: "address",
      },
    ],
    name: "setManagerAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_profileId",
        type: "uint256",
      },
    ],
    name: "unfollow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611af0806100606000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637978b2311161008c578063a8c6178f11610066578063a8c6178f14610247578063cb0e0d7d14610277578063f08f4f64146102a7578063f2fde38b146102d7576100ea565b80637978b231146101dd5780638e70d3b9146101f95780639c675eaa14610229576100ea565b8063334c3f0e116100c8578063334c3f0e1461016b578063384b1393146101875780636ec5239f146101a35780636f61c744146101bf576100ea565b806301998534146100ef57806305cfa06f1461010b5780631328ec9b1461013b575b600080fd5b6101096004803603810190610104919061120f565b6102f3565b005b6101256004803603810190610120919061129a565b610600565b60405161013291906112e2565b60405180910390f35b6101556004803603810190610150919061120f565b610615565b604051610162919061138d565b60405180910390f35b610185600480360381019061018091906114e4565b610722565b005b6101a1600480360381019061019c919061120f565b610842565b005b6101bd60048036038101906101b891906114e4565b610a31565b005b6101c7610a96565b6040516101d491906115ef565b60405180910390f35b6101f760048036038101906101f2919061129a565b610ba5565b005b610213600480360381019061020e919061120f565b610c41565b60405161022091906116c0565b60405180910390f35b610231610d18565b60405161023e91906116f1565b60405180910390f35b610261600480360381019061025c919061120f565b610d3c565b60405161026e91906116c0565b60405180910390f35b610291600480360381019061028c919061129a565b610e13565b60405161029e919061171b565b60405180910390f35b6102c160048036038101906102bc919061120f565b610e5f565b6040516102ce91906115ef565b60405180910390f35b6102f160048036038101906102ec919061129a565b611003565b005b6102fc32610600565b61030557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361037157600080fd5b600061037c32610e13565b905081810361038a57600080fd5b6103f5600660008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103ea57602002820191906000526020600020905b8154815260200190600101908083116103d6575b5050505050836110d7565b156104c357600060066000838152602001908152602001600020905060005b600660008481526020019081526020016000208054905081101561049d578360066000858152602001908152602001600020828154811061045857610457611736565b5b90600052602060002001540361048a5781818154811061047b5761047a611736565b5b90600052602060002001600090555b808061049590611794565b915050610414565b5080600660008481526020019081526020016000209080546104c0929190611132565b50505b61052e6005600084815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561052357602002820191906000526020600020905b81548152602001906001019080831161050f575b5050505050826110d7565b156105fc57600060056000848152602001908152602001600020905060005b60056000858152602001908152602001600020805490508110156105d6578260056000868152602001908152602001600020828154811061059157610590611736565b5b9060005260206000200154036105c3578181815481106105b4576105b3611736565b5b90600052602060002001600090555b80806105ce90611794565b91505061054d565b5080600560008581526020019081526020016000209080546105f9929190611132565b50505b5050565b60008061060c83610e13565b14159050919050565b606060006004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201805461069c9061180b565b80601f01602080910402602001604051908101604052809291908181526020018280546106c89061180b565b80156107155780601f106106ea57610100808354040283529160200191610715565b820191906000526020600020905b8154815290600101906020018083116106f857829003601f168201915b5050505050915050919050565b60208151111561073157600080fd5b6000602082015190506002600081548092919061074d90611794565b91905055506040518060600160405280600254815260200182815260200160405180602001604052806000815250815250600360003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816107e691906119e8565b509050503260046000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61084b32610600565b61085457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108c057600080fd5b60006108cb32610e13565b90508181036108d957600080fd5b6109446006600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561093957602002820191906000526020600020905b815481526020019060010190808311610925575b5050505050836110d7565b61098357600660008281526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150555b6109ee600560008481526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156109e357602002820191906000526020600020905b8154815260200190600101908083116109cf575b5050505050826110d7565b610a2d57600560008381526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555b5050565b610a3a32610600565b610a4357600080fd5b80600360003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019081610a9291906119e8565b5050565b610a9e611184565b610aa732610600565b610ab057600080fd5b600360003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282018054610b1e9061180b565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4a9061180b565b8015610b975780601f10610b6c57610100808354040283529160200191610b97565b820191906000526020600020905b815481529060010190602001808311610b7a57829003601f168201915b505050505081525050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bfd57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610caf57600080fd5b60056000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d0c57602002820191906000526020600020905b815481526020019060010190808311610cf8575b50505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610daa57600080fd5b60066000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610e0757602002820191906000526020600020905b815481526020019060010190808311610df3575b50505050509050919050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b610e67611184565b600073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ed357600080fd5b60006004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282018054610f799061180b565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa59061180b565b8015610ff25780601f10610fc757610100808354040283529160200191610ff2565b820191906000526020600020905b815481529060010190602001808311610fd557829003601f168201915b505050505081525050915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461105b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361109457600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600090505b835181101561112657828482815181106110fc576110fb611736565b5b60200260200101510361111357600191505061112c565b808061111e90611794565b9150506110df565b50600090505b92915050565b8280548282559060005260206000209081019282156111735760005260206000209182015b82811115611172578254825591600101919060010190611157565b5b50905061118091906111a8565b5090565b60405180606001604052806000815260200160008019168152602001606081525090565b5b808211156111c15760008160009055506001016111a9565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6111ec816111d9565b81146111f757600080fd5b50565b600081359050611209816111e3565b92915050565b600060208284031215611225576112246111cf565b5b6000611233848285016111fa565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112678261123c565b9050919050565b6112778161125c565b811461128257600080fd5b50565b6000813590506112948161126e565b92915050565b6000602082840312156112b0576112af6111cf565b5b60006112be84828501611285565b91505092915050565b60008115159050919050565b6112dc816112c7565b82525050565b60006020820190506112f760008301846112d3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561133757808201518184015260208101905061131c565b60008484015250505050565b6000601f19601f8301169050919050565b600061135f826112fd565b6113698185611308565b9350611379818560208601611319565b61138281611343565b840191505092915050565b600060208201905081810360008301526113a78184611354565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113f182611343565b810181811067ffffffffffffffff821117156114105761140f6113b9565b5b80604052505050565b60006114236111c5565b905061142f82826113e8565b919050565b600067ffffffffffffffff82111561144f5761144e6113b9565b5b61145882611343565b9050602081019050919050565b82818337600083830152505050565b600061148761148284611434565b611419565b9050828152602081018484840111156114a3576114a26113b4565b5b6114ae848285611465565b509392505050565b600082601f8301126114cb576114ca6113af565b5b81356114db848260208601611474565b91505092915050565b6000602082840312156114fa576114f96111cf565b5b600082013567ffffffffffffffff811115611518576115176111d4565b5b611524848285016114b6565b91505092915050565b611536816111d9565b82525050565b6000819050919050565b61154f8161153c565b82525050565b600082825260208201905092915050565b6000611571826112fd565b61157b8185611555565b935061158b818560208601611319565b61159481611343565b840191505092915050565b60006060830160008301516115b7600086018261152d565b5060208301516115ca6020860182611546565b50604083015184820360408601526115e28282611566565b9150508091505092915050565b60006020820190508181036000830152611609818461159f565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611649838361152d565b60208301905092915050565b6000602082019050919050565b600061166d82611611565b611677818561161c565b93506116828361162d565b8060005b838110156116b357815161169a888261163d565b97506116a583611655565b925050600181019050611686565b5085935050505092915050565b600060208201905081810360008301526116da8184611662565b905092915050565b6116eb8161125c565b82525050565b600060208201905061170660008301846116e2565b92915050565b611715816111d9565b82525050565b6000602082019050611730600083018461170c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061179f826111d9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117d1576117d0611765565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061182357607f821691505b602082108103611836576118356117dc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261189e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611861565b6118a88683611861565b95508019841693508086168417925050509392505050565b6000819050919050565b60006118e56118e06118db846111d9565b6118c0565b6111d9565b9050919050565b6000819050919050565b6118ff836118ca565b61191361190b826118ec565b84845461186e565b825550505050565b600090565b61192861191b565b6119338184846118f6565b505050565b5b818110156119575761194c600082611920565b600181019050611939565b5050565b601f82111561199c5761196d8161183c565b61197684611851565b81016020851015611985578190505b61199961199185611851565b830182611938565b50505b505050565b600082821c905092915050565b60006119bf600019846008026119a1565b1980831691505092915050565b60006119d883836119ae565b9150826002028217905092915050565b6119f1826112fd565b67ffffffffffffffff811115611a0a57611a096113b9565b5b611a14825461180b565b611a1f82828561195b565b600060209050601f831160018114611a525760008415611a40578287015190505b611a4a85826119cc565b865550611ab2565b601f198416611a608661183c565b60005b82811015611a8857848901518255600182019150602085019450602081019050611a63565b86831015611aa55784890151611aa1601f8916826119ae565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220b8acf52174108e1544ddba1bff38814fc570fb933435d6f1a3656352bcfc8a6264736f6c63430008110033";

type UserStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserStorage__factory extends ContractFactory {
  constructor(...args: UserStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserStorage> {
    return super.deploy(overrides || {}) as Promise<UserStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserStorage {
    return super.attach(address) as UserStorage;
  }
  override connect(signer: Signer): UserStorage__factory {
    return super.connect(signer) as UserStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserStorageInterface {
    return new utils.Interface(_abi) as UserStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserStorage {
    return new Contract(address, _abi, signerOrProvider) as UserStorage;
  }
}
