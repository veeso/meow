/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../ContractManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "deleteAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610722806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80639b2ea4bd1461005c5780639c675eaa14610078578063bf40fac114610096578063c193b42a146100c6578063f2fde38b146100e2575b600080fd5b61007660048036038101906100719190610568565b6100fe565b005b6100806101b7565b60405161008d91906105d3565b60405180910390f35b6100b060048036038101906100ab91906105ee565b6101db565b6040516100bd91906105d3565b60405180910390f35b6100e060048036038101906100db91906105ee565b610223565b005b6100fc60048036038101906100f79190610637565b6102dc565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015657600080fd5b8060018360405161016791906106d5565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001826040516101ed91906106d5565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027b57600080fd5b600060018260405161028d91906106d5565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361036d57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610417826103ce565b810181811067ffffffffffffffff82111715610436576104356103df565b5b80604052505050565b60006104496103b0565b9050610455828261040e565b919050565b600067ffffffffffffffff821115610475576104746103df565b5b61047e826103ce565b9050602081019050919050565b82818337600083830152505050565b60006104ad6104a88461045a565b61043f565b9050828152602081018484840111156104c9576104c86103c9565b5b6104d484828561048b565b509392505050565b600082601f8301126104f1576104f06103c4565b5b813561050184826020860161049a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105358261050a565b9050919050565b6105458161052a565b811461055057600080fd5b50565b6000813590506105628161053c565b92915050565b6000806040838503121561057f5761057e6103ba565b5b600083013567ffffffffffffffff81111561059d5761059c6103bf565b5b6105a9858286016104dc565b92505060206105ba85828601610553565b9150509250929050565b6105cd8161052a565b82525050565b60006020820190506105e860008301846105c4565b92915050565b600060208284031215610604576106036103ba565b5b600082013567ffffffffffffffff811115610622576106216103bf565b5b61062e848285016104dc565b91505092915050565b60006020828403121561064d5761064c6103ba565b5b600061065b84828501610553565b91505092915050565b600081519050919050565b600081905092915050565b60005b8381101561069857808201518184015260208101905061067d565b60008484015250505050565b60006106af82610664565b6106b9818561066f565b93506106c981856020860161067a565b80840191505092915050565b60006106e182846106a4565b91508190509291505056fea2646970667358221220032cbf7ecee5cc429fa80005e38e1ca97438564a4893aaabaf20cfe549d07fd664736f6c63430008110033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  override connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
